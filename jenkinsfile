pipeline {
    agent any

    environment{
        NETLIFY_SITE_ID = '2a2e08c5-e855-4c87-922e-1e567dd1af68'  
          }

    stages {
        stage('build') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            environment {
                NPM_CONFIG_CACHE = '/tmp/.npm'
                NPM_CONFIG_PREFIX = '/tmp/.npm-global'
            }
            steps {
                sh '''
                    mkdir -p /tmp/.npm
                    mkdir -p /tmp/.npm-global
                    node --version
                    npm --version
                    npm ci
                    npm run build
                '''
            }
        }

        stage('test') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    test -f build/index.html
                    npm test
                '''
            }
        }

        stage('e2e') {
            agent {
                docker {
                    image 'mcr.microsoft.com/playwright:v1.52.0-noble'
                    reuseNode true
                }
            }
            environment {
                NPM_CONFIG_CACHE = '/tmp/npm-cache'
            }
            steps {
                sh '''
                    npm install serve
                    nohup npx serve -s build > serve.log 2>&1 &
                    SERVE_PID=$!
                    sleep 5
                    kill $SERVE_PID
                '''
            }
        }

        stage('deploy') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            environment {
                HOME = '/tmp' // Prevent sharp from writing to root-owned /.npm
                NPM_CONFIG_CACHE = '/tmp/.npm'
                NPM_CONFIG_PREFIX = '/tmp/.npm-global'
                PATH = '/tmp/.npm-global/bin:$PATH' // Ensure global npm binaries are in PATH
            }
            steps {
                sh '''
                    echo "Deploying the pipeline"
                    mkdir -p $NPM_CONFIG_CACHE
                    mkdir -p $NPM_CONFIG_PREFIX/bin
                    npm install -g netlify-cli --unsafe-perm
                    
                    # Print the global npm binary path to debug
                    echo "NPM global bin path: $(npm bin -g)"
                    echo "Deploying to production .Site Id:$NETLIFY_SITE_ID"
                '''
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: '**/screenshot.png', allowEmptyArchive: true
        }
    }
}
