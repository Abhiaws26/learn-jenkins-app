pipeline {
    agent any
    stages {
        stage('build') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            environment {
                // Set the npm cache to a writable directory
                NPM_CONFIG_CACHE = '/tmp/.npm'
                // Set the npm global installation directory to a writable location
                NPM_CONFIG_PREFIX = '/tmp/.npm-global'
            }
            steps {
                sh '''
                    # Ensure /tmp/.npm and /tmp/.npm-global are writable
                    mkdir -p /tmp/.npm
                    mkdir -p /tmp/.npm-global

                    # Check npm versions and directories
                    node --version
                    npm --version

                    # Install dependencies without causing permission issues
                    npm ci
                    npm run build
                '''
            }
        }
        stage('test') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    # Check if the build output exists
                    test -f build/index.html
                    npm test
                '''
            }
        }
        stage('E2E') {
            agent {
                docker {
                    image 'mcr.microsoft.com/playwright:v1.52.0-noble'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    # Install serve globally in a writable directory
                    npm install -g serve --prefix /tmp/.npm-global

                    # Ensure the correct npm global directory is in the PATH
                    export PATH=$PATH:/tmp/.npm-global/bin

                    # Serve the build folder on all interfaces
                    serve -s build -l 0.0.0.0:5000 &

                    # Wait for a few seconds to ensure the server is up and running
                    sleep 5

                    # Run Playwright tests (ensure Playwright is installed)
                    npx playwright test --project=chromium
                '''
            }
        }
    }
}
