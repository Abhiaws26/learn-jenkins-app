pipeline {
    agent any
    stages {
        stage('build') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            environment {
                NPM_CONFIG_CACHE = '/tmp/.npm'
                NPM_CONFIG_PREFIX = '/tmp/.npm-global'
            }
            steps {
                sh '''
                    mkdir -p /tmp/.npm
                    mkdir -p /tmp/.npm-global
                    node --version
                    npm --version
                    npm ci
                    npm run build
                '''
            }
        }
        stage('test') {
                parllel {
                    {
                agent {
                    docker {
                        image 'node:18-alpine'
                        reuseNode true
                    }
                }
                steps {
                    sh '''
                        test -f build/index.html
                        npm test
                    '''
                }
            }
            stage('E2E') {
                agent {
                    docker {
                        image 'mcr.microsoft.com/playwright:v1.52.0-noble'
                        reuseNode true
                    }
                }
                steps {
                    sh '''
                        export NPM_CONFIG_CACHE=/tmp/npm-cache
                        npm install serve
                        nohup npx serve -s build > serve.log 2>&1 &
                        SERVE_PID=$!
                        sleep 5
                        kill $SERVE_PID
                    '''
                }
            }
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: '**/screenshot.png', allowEmptyArchive: true
        }
    }
}
